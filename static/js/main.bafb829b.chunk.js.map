{"version":3,"sources":["Components/AppNavLink/AppNavLink.tsx","Components/AppHeader/Drawer/MobileDrawer.tsx","Components/AppHeader/AppHeader.tsx","App.tsx","Components/Posts/Post/PostComponent.tsx","api/fetchClient.ts","api/api/post.api.ts","Components/Posts/Posts.tsx","Components/Contacts/Contacts.tsx","Components/About/About.tsx","Components/SinglePost/SinglePost.tsx","Components/NotFound/NotFound.tsx","Components/NotFound/NotFoundRedirect.ts","AppRouting.tsx","index.tsx"],"names":["AppNavLink","to","children","className","isActive","cn","style","textDecoration","Button","sx","color","MobileDrawer","props","isDrawerOpen","handleDrawerToggle","items","Box","component","Drawer","variant","open","onClose","ModalProps","keepMounted","display","xs","sm","boxSizing","width","onClick","textAlign","Typography","my","Divider","List","map","item","path","ListItem","disablePadding","ListItemButton","name","navItems","AppHeader","React","setIsDrawerOpen","prevState","CssBaseline","AppBar","Toolbar","IconButton","edge","mr","flexGrow","App","p","PostComponent","post","Card","maxWidth","CardContent","gutterBottom","title","body","CardActions","id","size","BASE_URL","wait","delay","Promise","resolve","setTimeout","request","url","method","data","options","JSON","stringify","headers","then","fetch","response","ok","Error","status","statusText","json","fetchClient","postApi","Posts","useState","posts","setPosts","useEffect","Contacts","About","SinglePost","postId","useParams","navigate","useNavigate","setPost","isValid","test","Number","catch","LinearProgress","Date","createdAt","toLocaleDateString","NotFound","src","alt","NotFoundRedirect","router","createHashRouter","element","errorElement","AppRouting","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bafb829b.chunk.js","sourcesContent":["import React, { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport cn from 'classnames';\nimport Button from '@mui/material/Button';\nimport './AppNavLink.scss';\n\ninterface Props {\n  to: string;\n  children: React.ReactNode;\n}\n\nexport const AppNavLink: FC<Props> = ({\n  to, children,\n}) => {\n  return (\n    <NavLink\n      className={({ isActive }) => cn(\n        'navLink',\n        { 'navLink--active': isActive },\n      )}\n      to={to}\n      style={{ textDecoration: 'none' }}\n    >\n      <Button sx={{ color: 'inherit' }}>\n        {children}\n      </Button>\n    </NavLink>\n  );\n};\n","import { FC } from 'react';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Divider from '@mui/material/Divider';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport Drawer from '@mui/material/Drawer';\nimport { Link } from 'react-router-dom';\nimport { AppNavLink } from '../../AppNavLink/AppNavLink';\n\ninterface Props {\n  items: { name: string, path: string }[];\n  handleDrawerToggle: () => void;\n  isDrawerOpen: boolean;\n}\n\nexport const MobileDrawer: FC<Props> = (props) => {\n  const {\n    isDrawerOpen,\n    handleDrawerToggle,\n    items,\n  } = props;\n\n  return (\n    <Box component=\"nav\">\n      <Drawer\n        variant=\"temporary\"\n        open={isDrawerOpen}\n        onClose={handleDrawerToggle}\n        ModalProps={{\n          keepMounted: true, // Better open performance on mobile.\n        }}\n        sx={{\n          display: { xs: 'block', sm: 'none' },\n          '& .MuiDrawer-paper': { boxSizing: 'border-box', width: 240 },\n        }}\n      >\n        <Box onClick={handleDrawerToggle} sx={{ textAlign: 'center' }}>\n          <Typography variant=\"h6\" sx={{ my: 2 }}>\n            MUI\n          </Typography>\n          <Divider />\n          <List>\n            {items.map((item) => (\n              <Link\n                to={item.path}\n                key={item.name}\n                style={{ textDecoration: 'none' }}\n              >\n                <ListItem disablePadding>\n                  <ListItemButton sx={{ textAlign: 'center' }}>\n                    <AppNavLink to={item.path} key={item.name}>\n                      {item.name}\n                    </AppNavLink>\n                  </ListItemButton>\n                </ListItem>\n              </Link>\n            ))}\n          </List>\n        </Box>\n      </Drawer>\n    </Box>\n  );\n};\n","import * as React from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport IconButton from '@mui/material/IconButton';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport { FC } from 'react';\nimport { MobileDrawer } from './Drawer/MobileDrawer';\nimport '../AppNavLink/AppNavLink.scss';\nimport { AppNavLink } from '../AppNavLink/AppNavLink';\n\nconst navItems = [\n  { name: 'Posts', path: '/posts' },\n  { name: 'Contacts', path: '/contacts' },\n  { name: 'About', path: '/about' },\n];\n\nexport const AppHeader: FC = () => {\n  const [isDrawerOpen, setIsDrawerOpen] = React.useState(false);\n\n  const handleDrawerToggle = () => {\n    setIsDrawerOpen((prevState) => !prevState);\n  };\n\n  return (\n    <>\n      <CssBaseline />\n      <AppBar component=\"nav\">\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"start\"\n            onClick={handleDrawerToggle}\n            sx={{ mr: 2, display: { sm: 'none' } }}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography\n            variant=\"h6\"\n            component=\"div\"\n            sx={{ flexGrow: 1, display: { xs: 'none', sm: 'block' } }}\n          >\n            MUI\n          </Typography>\n          <Box sx={{ display: { xs: 'none', sm: 'block' } }}>\n            {navItems.map((item) => (\n              <AppNavLink to={item.path} key={item.name}>\n                {item.name}\n              </AppNavLink>\n            ))}\n          </Box>\n        </Toolbar>\n      </AppBar>\n      <MobileDrawer\n        isDrawerOpen={isDrawerOpen}\n        handleDrawerToggle={handleDrawerToggle}\n        items={navItems}\n      />\n    </>\n  );\n};\n","import Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport { FC } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { AppHeader } from './Components/AppHeader/AppHeader';\n\nexport const App: FC = () => {\n  return (\n    <Box sx={{ display: 'flex' }}>\n      <AppHeader />\n      <Box component=\"main\" sx={{ p: 3 }}>\n        <Toolbar />\n\n        <Outlet />\n      </Box>\n    </Box>\n  );\n};\n","import Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Post } from '../../../typedefs';\n\nexport interface Props {\n  post: Post;\n}\n\nexport const PostComponent: FC<Props> = ({ post }) => {\n  return (\n    <Card sx={{ maxWidth: 345 }}>\n      <CardContent>\n        <Typography gutterBottom variant=\"h5\" component=\"div\">\n          {post.title}\n        </Typography>\n        <Typography variant=\"body2\" color=\"text.secondary\">\n          {post.body}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Link\n          to={`/posts/${post.id}`}\n          style={{ textDecoration: 'none' }}\n        >\n          <Button size=\"small\">\n            Learn More\n          </Button>\n        </Link>\n      </CardActions>\n    </Card>\n  );\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nconst BASE_URL = 'https://mate.academy/students-api';\n\n// returns a promise resolved after a given delay\nfunction wait(delay: number) {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\n// To have autocompletion and avoid mistypes\ntype RequestMethod = 'GET' | 'POST' | 'PATCH' | 'DELETE';\n\nfunction request<T>(\n  url: string,\n  method: RequestMethod = 'GET',\n  data: any = null, // we can send any data to the server\n): Promise<T> {\n  const options: RequestInit = { method };\n\n  if (data) {\n    // We add body and Content-Type only for the requests with data\n    options.body = JSON.stringify(data);\n    options.headers = {\n      'Content-Type': 'application/json; charset=UTF-8',\n    };\n  }\n\n  // we wait for testing purpose to see loaders\n  return wait(300)\n    .then(() => fetch(BASE_URL + url, options))\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n\n      return response.json();\n    });\n}\n\nexport const fetchClient = {\n  get: <T>(url: string) => request<T>(url),\n  post: <T>(url: string, data: any) => request<T>(url, 'POST', data),\n  patch: <T>(url: string, data: any) => request<T>(url, 'PATCH', data),\n  delete: (url: string) => request(url, 'DELETE'),\n};\n","import { fetchClient } from '../fetchClient';\nimport { Post } from '../../typedefs';\n\nconst loadAll = () => (\n  fetchClient.get<Post[]>('/posts')\n);\n\nconst loadById = (id: number) => (\n  fetchClient.get<Post>(`/posts/${id}`)\n);\n\nexport const postApi = {\n  loadAll,\n  loadById,\n};\n","import {\n  FC, useEffect, useState,\n} from 'react';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport { Post } from '../../typedefs';\nimport { PostComponent } from './Post/PostComponent';\nimport { postApi } from '../../api/api/post.api';\n\nexport const Posts: FC = () => {\n  const [posts, setPosts] = useState<Post[]>([]);\n\n  useEffect(() => {\n    postApi.loadAll().then(setPosts);\n  }, []);\n\n  return (\n    <>\n      <h1>Posts page</h1>\n      <List>\n        {posts.map((post) => (\n          <ListItem key={post.id}>\n            <PostComponent post={post} />\n          </ListItem>\n        ))}\n      </List>\n    </>\n  );\n};\n","import { FC } from 'react';\n\nexport const Contacts: FC = () => {\n  return (\n    <>\n      <h1>Contacts page</h1>\n      <ul>\n        <li>\n          <p>\n            Phone: 123456789\n          </p>\n        </li>\n        <li>\n          <p>\n            Email:someemail@mate.academy\n          </p>\n        </li>\n        <li>\n          <p>\n            Address: Kyiv, Ukraine\n          </p>\n        </li>\n      </ul>\n    </>\n  );\n};\n","import { FC } from 'react';\nimport Typography from '@mui/material/Typography';\n\nexport const About: FC = () => {\n  return (\n    <>\n      <h1>About page</h1>\n      <Typography>\n        {`Lorem ipsum dolor sit amet consectetur adipisicing elit. Similique unde\n        fugit veniam eius, perspiciatis sunt? Corporis qui ducimus quibusdam,\n        aliquam dolore excepturi quae. Distinctio enim at eligendi perferendis in\n        cum quibusdam sed quae, accusantium et aperiam? Quod itaque exercitationem,\n        at ab sequi qui modi delectus quia corrupti alias distinctio nostrum.\n        Minima ex dolor modi inventore sapiente necessitatibus aliquam fuga et. Sed\n        numquam quibusdam at officia sapiente porro maxime corrupti perspiciatis\n        asperiores, exercitationem eius nostrum consequuntur iure aliquam itaque,\n        assumenda et! Quibusdam temporibus beatae doloremque voluptatum doloribus\n        soluta accusamus porro reprehenderit eos inventore facere, fugit, molestiae\n        ab officiis illo voluptates recusandae. Vel dolor nobis eius, ratione atque\n        soluta, aliquam fugit qui iste architecto perspiciatis. Nobis, voluptatem!\n        Cumque, eligendi unde aliquid minus quis sit debitis obcaecati error,\n        delectus quo eius exercitationem tempore. Delectus sapiente, provident\n        corporis dolorum quibusdam aut beatae repellendus est labore quisquam\n        praesentium repudiandae non vel laboriosam quo ab perferendis velit ipsa\n        deleniti modi! Ipsam, illo quod. Nesciunt commodi nihil corrupti cum non\n        fugiat praesentium doloremque architecto laborum aliquid. Quae, maxime\n        recusandae? Eveniet dolore molestiae dicta blanditiis est expedita eius\n        debitis cupiditate porro sed aspernatur quidem, repellat nihil quasi\n        praesentium quia eos, quibusdam provident. Incidunt tempore vel placeat\n        voluptate iure labore, repellendus beatae quia unde est aliquid dolor\n        molestias libero. Reiciendis similique exercitationem consequatur, nobis\n        placeat illo laudantium! Enim perferendis nulla soluta magni error,\n        provident repellat similique cupiditate ipsam, et tempore cumque quod! Qui,\n        iure suscipit tempora unde rerum autem saepe nisi vel cupiditate iusto.\n        Illum, corrupti? Fugiat quidem accusantium nulla. Aliquid inventore commodi\n        reprehenderit rerum reiciendis! Quidem alias repudiandae eaque eveniet\n        cumque nihil aliquam in expedita, impedit quas ipsum nesciunt ipsa ullam\n        consequuntur dignissimos numquam at nisi porro a, quaerat rem repellendus.\n        Voluptates perspiciatis, in pariatur impedit, nam facilis libero dolorem\n        dolores sunt inventore perferendis, aut sapiente modi nesciunt.`}\n      </Typography>\n    </>\n  );\n};\n","import { FC, useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { LinearProgress } from '@mui/material';\nimport Button from '@mui/material/Button';\nimport { Post } from '../../typedefs';\nimport { postApi } from '../../api/api/post.api';\n\nconst isStringFiniteNumber = (str: string): boolean => {\n  return /^\\d+$/.test(str);\n};\n\nexport const SinglePost: FC = () => {\n  const { postId } = useParams<{ postId: string }>();\n  const navigate = useNavigate();\n\n  const [post, setPost] = useState<Post | null>(null);\n\n  useEffect(() => {\n    const isValid = isStringFiniteNumber(postId || '');\n\n    if (!isValid) {\n      navigate('/not-found');\n    }\n\n    if (isValid) {\n      postApi.loadById(Number(postId))\n        .then(setPost)\n        .catch(() => navigate('/not-found'));\n    }\n  }, [postId]);\n\n  return (\n    <>\n      <h1>SinglePost </h1>\n      {!post && <LinearProgress />}\n\n      {post && (\n        <>\n          <h2>{`#${post.id} ${post.title}`}</h2>\n          <p>{post.body}</p>\n          <p>{new Date(post.createdAt).toLocaleDateString()}</p>\n        </>\n      )}\n\n      <Button\n        onClick={() => navigate(-1)}\n        variant=\"contained\"\n      >\n        Back\n      </Button>\n    </>\n  );\n};\n","import { FC } from 'react';\n\nexport const NotFound: FC = () => {\n  return (\n    <>\n      <h1>NotFound</h1>\n      <img\n        src=\"https://i.redd.it/0wi4mopf1zm21.gif\"\n        alt=\"Trevolta\"\n        style={{ width: '100%' }}\n      />\n    </>\n  );\n};\n","import { FC, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nexport const NotFoundRedirect: FC = () => {\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    navigate('/not-found');\n  }, []);\n\n  return null;\n};\n","import {\n  createHashRouter,\n  RouterProvider,\n} from 'react-router-dom';\nimport { FC } from 'react';\nimport { App } from './App';\nimport { Posts } from './Components/Posts/Posts';\nimport { Contacts } from './Components/Contacts/Contacts';\nimport { About } from './Components/About/About';\nimport { SinglePost } from './Components/SinglePost/SinglePost';\nimport { NotFound } from './Components/NotFound/NotFound';\nimport { NotFoundRedirect } from './Components/NotFound/NotFoundRedirect';\n\nconst router = createHashRouter([\n  {\n    path: '/',\n    element: <App />,\n    errorElement: <NotFoundRedirect />,\n    children: [\n      {\n        path: '/',\n        element: <Posts />,\n      },\n      {\n        path: '/posts',\n        element: <Posts />,\n      },\n      {\n        path: '/posts/:postId',\n        element: <SinglePost />,\n      },\n      {\n        path: '/contacts',\n        element: <Contacts />,\n      },\n      {\n        path: '/about',\n        element: <About />,\n      },\n      {\n        path: 'not-found',\n        element: <NotFound />,\n      },\n    ],\n  },\n]);\n\nexport const AppRouting: FC = () => {\n  return (\n    <RouterProvider router={router} />\n  );\n};\n","import ReactDOM from 'react-dom';\nimport './index.scss';\nimport { AppRouting } from './AppRouting';\n\nReactDOM.render(\n  <AppRouting />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}